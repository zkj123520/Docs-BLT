(function (exports, core, Sortable, vue) {
  'use strict';

  function useSortable(el, list, options = {}) {
    let sortable;
    const { document = core.defaultDocument, ...resetOptions } = options;
    const defaultOptions = {
      onUpdate: (e) => {
        moveArrayElement(list, e.oldIndex, e.newIndex, e);
      }
    };
    const start = () => {
      const target = typeof el === "string" ? document == null ? undefined : document.querySelector(el) : core.unrefElement(el);
      if (!target || sortable !== undefined)
        return;
      sortable = new Sortable(target, { ...defaultOptions, ...resetOptions });
    };
    const stop = () => {
      sortable == null ? undefined : sortable.destroy();
      sortable = undefined;
    };
    const option = (name, value) => {
      if (value !== undefined)
        sortable == null ? undefined : sortable.option(name, value);
      else
        return sortable == null ? undefined : sortable.option(name);
    };
    core.tryOnMounted(start);
    core.tryOnScopeDispose(stop);
    return {
      stop,
      start,
      option
    };
  }
  function insertNodeAt(parentElement, element, index) {
    const refElement = parentElement.children[index];
    parentElement.insertBefore(element, refElement);
  }
  function removeNode(node) {
    if (node.parentNode)
      node.parentNode.removeChild(node);
  }
  function moveArrayElement(list, from, to, e = null) {
    if (e != null) {
      removeNode(e.item);
      insertNodeAt(e.from, e.item, from);
    }
    const _valueIsRef = vue.isRef(list);
    const array = _valueIsRef ? [...vue.toValue(list)] : vue.toValue(list);
    if (to >= 0 && to < array.length) {
      const element = array.splice(from, 1)[0];
      vue.nextTick(() => {
        array.splice(to, 0, element);
        if (_valueIsRef)
          list.value = array;
      });
    }
  }

  exports.insertNodeAt = insertNodeAt;
  exports.moveArrayElement = moveArrayElement;
  exports.removeNode = removeNode;
  exports.useSortable = useSortable;

})(this.VueUse = this.VueUse || {}, VueUse, Sortable, Vue);
